FRESHWORKS ROUND 1

Find the k closest points to origin
Time complexity
Optimized approch priority queue
real world kafka use case in company
how do yoi deploy code


INFORMATICA ROUND 1

dIFFERENCE BETWEEN HASHMAP AND HASHSET
WHAT IS HASHSET
WHAT IS DIFFERNCE BETWEEN HASHMAP AND HASHTABLE

HASHMAP HAS MANY CONSTRUCTORS SO WHAT IS LOAD FACTOR 0.75
WHAT US LOAD FACTOR
WHAT IS FAIL SAFE AND FAIL SAFE ITERATOR
WHAT IS CLASS LOADER AND DIFFERENT TYPES OF CLASS LOADER
WHAT IS FINAL FINALLY AND FINALIZE
IS FINALLY BLOCK ALWAYS REQUIRED
WHAT IS CHECKED AND UNCHECKED EXCEPTION AND GIVE EXAMPLES
WHAT IS ROOT CLASS OF EXCEPTION
WHAT IS COLLISION IN HASN MAP AND EXPLAIN IT
WHAT IS STRING IMMUTABLE AND WHAT HAPPENS INSIDE
WHAT IS STRING BUFFER AND STRING BUILDER
REGARDING SYNCHRONISATION ALSO

ALSO IS HASHMAP SYNCHRONIZED
IF HASHMAP CAN BE DONE COLLECTION.SYNCHRONIZED(MP)
THEN WHY CONCURRENT HASHMAP
WHAT IS CONCURRENT HASHMAP
EXPLAIN

WHAT IS FILE NOT FOUND EXCEPTION (RUN TIME OR COMPILE TIME)
WHEN IN TRY BLOCK WE HAVE SYSTEM.EXIT() THEN WILL CATCH AND FINALLY BLOCK...EXECUTE
WHICH IS SYNCHRONISED..THREAD OR THREAD BUFFER
WHAT IS INTERFACE AND ABSTRACT CLASS (DIFFERNEE BETWEEN THEM)

HOW IS OBJECT GARBAGE COLLECTED IN JAVA


GIVEN A STRING S=aaabbbccddddd
O/P= a3b3c2d5
encrypt

Given a string a3b2c1d2
0/P= aaabbcdd
decrypt


INFORMATICA ROUND 2
Find the next smaller element of each element in array

[[4, 8, 5, 2, 25}
[2,2,2,-1]

brute force and stack based approach and scan from right side..


why do we use kafka to communicate between services
any other way to communicate
why we use messaging system

what is garbage collection in java.how its done


FRESHWORKS ROUND 2
Find the longest palindromic substring.
brute force,recusrsion,corner case,tabular and odd length,even length

db design of project
what if parts do not come from other service./




import java.util.Arrays;
import java.util.Stack;

class Main
{
	// Find the next smaller element for every array element
	public static int[] findNextGreaterElements(int[] input)
	{
		// base case
		if (input == null) {
			return input;
		}

		int[] result = new int[input.length];
		Arrays.fill(result, -1);

		// create an empty stack
		Stack<Integer> s = new Stack<>();

		// do for each element
		for (int i = 0; i < input.length; i++)
		{
			// loop till we have a smaller element on top or stack becomes empty.

			// Keep popping elements from the stack larger than the current
			// element, and set their next smaller element to the current element

			while (!s.isEmpty() && input[s.peek()] > input[i]) {
				result[s.pop()] = input[i];
			}

			// push current "index" into the stack
			s.push(i);
		}

		return result;
	}

	public static void main(String[] args)
	{
		int[] input = { 2, 7, 3, 5, 4, 6, 8 };

		int[] result = findNextGreaterElements(input);
		System.out.println(Arrays.toString(result));
	}
}



NEXT GREATER ELEMENT FOR EVERY ARRAY ELEMENY

while (!s.isEmpty() && input[s.peek()] < input[i]) {
				result[s.pop()] = input[i];
			}


FRESHWORKS ROUND 3
FIND ALL PAIRS HAVING GIVEN SUM IN ARRAY

I GAVE SOLN FOR ALL ELEMENTS HAVING GIVEN SUM EQUAL TO K IN ARRAY

HE SAID OK

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Test {

    static void sumArrays(int arr[],int n,int target) {

        int cur_sum = 0;
        HashMap<Integer, List<Integer>> mp = new HashMap<>();
        //for 0 sum,corner case
        if (!mp.containsKey(0)) {
            mp.put(0, new ArrayList<>());
            mp.get(0).add(-1);
        }

        for (int i = 0; i < n; i++) {
            cur_sum += arr[i];
            if (mp.containsKey(cur_sum - target)) {
                List<Integer> vals = mp.get(cur_sum - target);
                for (Integer val : vals) {
                    canprintArray(arr, val + 1, i);
                }

            }
            if (!mp.containsKey(cur_sum)) {
                mp.put(cur_sum, new ArrayList<>());
                mp.get(cur_sum).add(i);
            }

        }
    }
    static void canprintArray(int arr[],int i,int j)
    {
        System.out.println(IntStream.range(i,j+1).mapToObj(l->arr[l]).collect(Collectors.toList()));
    }
    public static void main(String[] args)
    {
        int arr[]={3, 5, -2, 1, 2, 0};
        int n= arr.length;
        int target=3;
        sumArrays(arr,n,target);
    }
}

WHAT IS ADVANTAGE OF DOCKER
WHAT IS LAYERS IN DOCKER
WHY DOCKER AND NOT ZIP FILE
DIFFERENCE BETWEEN GIT MERGE AND GIT REBASE
WHY KAFKA AND NOT RABBIT MQ
WJAT IS KAFKA. AND EXPLAIN KAFKA WHAT IS IT USED FOR


paypal round 1

https://www.techiedelight.com/rearrange-array-positive-negative-numbers-alternate-positions/

partion logic quick sort 0 as pivot element

import java.util.Arrays;
 
class Main
{
    // Partitioning routine of Quicksort
    public static int partition(int[] A)
    {
        int j = 0;
        int pivot = 0;    // consider 0 as a pivot
 
        // each time we find a negative number, `j` is incremented,
        // and a negative element would be placed before the pivot
        for (int i = 0; i < A.length; i++)
        {
            if (A[i] < pivot)
            {
                // swap `A[i]` with `A[j]`
                int temp = A[i];
                A[i] = A[j];
                A[j] = temp;
 
                j++;
            }
        }
 
        // `j` holds the index of the first positive element
        return j;
    }
 
    // Function to rearrange a given array such that it contains positive
    // and negative numbers at alternate positions
    public static void rearrange(int[] A)
    {
        // partition a given array such that all positive elements move
        // to the end of the array
 
        int p = partition(A);
 
        // swap alternate negative elements from the next available positive
        // element till the end of the array is reached, or all negative or
        // positive elements are exhausted.
 
        for (int n = 0; (p < A.length && n < p); p++, n += 2)
        {
            // swap `A[n]` with `A[p]`
            int temp = A[n];
            A[n] = A[p];
            A[p] = temp;
        }
    }
 
    public static void main(String[] args)
    {
        int[] A = { 9, -3, 5, -2, -8, -6, 1, 3 };
 
        rearrange(A);
 
        // print the rearranged array
        System.out.println(Arrays.toString(A));
    }
}
o(n)

for storing relative order need to see


Q 1 :-Given a list of tickets, find itinerary in order using the given list.


Example: 



Input:

"Chennai" -> "Banglore"

"Bombay" -> "Delhi"

"Goa" -> "Chennai"

"Delhi" -> "Goa"



Output: 

Bombay->Delhi, Delhi->Goa, Goa->Chennai, Chennai->Banglore,


// Java program to print itinerary in order
import java.util.HashMap;
import java.util.Map;

public class printItinerary
{
	// Driver function
	public static void main(String[] args)
	{
		Map<String, String> dataSet = new HashMap<String, String>();
		dataSet.put("Chennai", "Banglore");
		dataSet.put("Bombay", "Delhi");
		dataSet.put("Goa", "Chennai");
		dataSet.put("Delhi", "Goa");

		printResult(dataSet);
	}

	// This function populates 'result' for given input 'dataset'
	private static void printResult(Map<String, String> dataSet)
	{
		// To store reverse of given map
		Map<String, String> reverseMap = new HashMap<String, String>();

		// To fill reverse map, iterate through the given map
		for (Map.Entry<String,String> entry: dataSet.entrySet())
			reverseMap.put(entry.getValue(), entry.getKey());

		// Find the starting point of itinerary
		String start = null;
		for (Map.Entry<String,String> entry: dataSet.entrySet())
		{
			if (!reverseMap.containsKey(entry.getKey()))
			{
				start = entry.getKey();
				break;
			}
		}

		// If we could not find a starting point, then something wrong
		// with input
		if (start == null)
		{
		System.out.println("Invalid Input");
		return;
		}

		// Once we have starting point, we simple need to go next, next
		// of next using given hash map
		String to = dataSet.get(start);
		while (to != null)
		{
			System.out.print(start + "->" + to + ", ");
			start = to;
			to = dataSet.get(to);
		}
	}
}




INFORMATICA ROUND 1
RIGHT VIEW OF BINARY TREE
CHECK IF A PAIR EXISTS WITH GIVEN SUM 
USING HASHSET AND TWO POINTERS
WHICH ONE WILL WORK WITH DUPLICATES BETTER-TWO POINTERS
TIME COMPLEXITY OF BOTH APPROACHES


DIFFERENCE BETWEEN MONGODB AND SQL
WHAT IS MICROSERVICE ARCHITECTURE
ADVANTAGES
MONGO DB WITH JOINS HOW CAN WE ACHIEVE


ROUND 2
FEATURES OF JAVA 8
WHAT ALL
WHEN TO USE FOREACH AND WHEN TO USE STREAMS
CHECK IF TWO TREES ARE MIRROR OF EACH OTHER
DELETE A NODE IN LINKED LIST GIVEN THE DATA X=6

WHAT DESIGN PATTERS USED
DESIGN NEWS FEED APP
WHAT DESIGN PATTERN USED
PUBLISH SUBSCRIBE

ROUND 3
SUPPOSE DIFFERENT DB SOURCES,ONE IS EXCEL,ONE IS DATABASE,NEED TO COMBONE ALL DATAAND SHOW IT TO DIRECTOR
ONE IS FINANCE DATA,ONE IS STUDENT DEPARTMENTS DATA,HOW TO AGGREGATE AND SHOW TO USER

USE MULTITHREADING

DIFFERENCE BETWEEN MONOITHIC AND MICROSERVICE


---------------



SIEMENS
--------



JP MORGAN
TELL ABOUT PROJECT
WHAT ISSUES IN PROJECT,IN PRODUCTION
WHAT DESIGN CHANGES
WHAT RELATIONSHIPS IN DB
WHAT JOINS US USED
WHAT IS SELF JOIN,GIVE EXAMPLE REAL LIFE
WHAT LIBRARIES IN SPRING BOOT
U USED
WHAT DEPENDENCIES...SPRING JPA SPRING STARTER
HE ASKED NOT USED HIBERNATE?
REVERESE A DECIMAL NUMBER WITH AND WITHOUT STRING
CAN WE OVEERIDE STATIC METHODS
USE OF PRIVATE CONSTRUCTOR
WHERE USED PRIVATE CONSTRUCTOR
WHAT IS SINGLETON CLASS
HOW CAN WE ACHIEVE TWO OBJECT CREATIONB WITH SINBGLETON CLASS
IF WE USE TWO STATIC OBJECTS
CHECK IF NULL THAT CONDITION
HOW TO ACHIEVE RANDOMNESS OF OBJECT CREATION IN SINGLETIN PATTERN
IF WE CREATE THITD OBJECT,IT  RETURNS ANY INSTANCE CREATED OUT OF THREE OBJECTS
HE TOLD TO USE RANDOM FUNCTIONS

WORKING OF HASHSET
HOW CAN WE ACHIEVE WORST CASE COMPLEXITY IN HASHMAP
EXPLANE WORST COMPLEXITY HASHMAP
HOW TO REDUCE IT
WHAT MODIFICATIONS TO ACHIEVE WORST CASE COMPLEXITY,CHANGE THE HASH FUNCTION

WHT FEATURES OF JAVA 8 U USED
difference between sql and no  sql
why mongo and oracle db used in projects
what steps u would take to optimize sql query
indexes,sub select queries
how to make joins faster
what about cost of sql query from execution plan
will it be affected
what about rank function in oracle


reverese a decimal number


JP MORGAN ROUND 2

What all things u keep in mind while designing APIs
like from ui and backend
what all things u need to have in backend
for eg take upload api
what from formdata in ui and backend multipart request
what if upload multiple files and single file
then multipart[] and multipart in request parameter
how to control size of file
will it throw an error if exceeds

lets say you have a hashpap with key as username,emailid and id
and value as user object
what all things u need to have for hashmap to function efficiently?

we need to override and hashcode maethid with those 3 fields of key

lets say you have a class woth method
and we extend that class with metthod overriding
what if the method in base class throws null poinyer exception,what will happen to the overriden method
how will we catch tat excepiom

hmmm the root class exception will propagate to child class too so we need to handle it


in ur project how have u handled exceptions in various layers
in ur spring boot what sort of validatuons u have done for the request to be sanitised

impleneted filete,there authorixation code for roles
apart from that use @non null and @min and @max
and business level validations and throwing exception if that value not there
how the user will understand the messages
using log messages,exception stack trace and custom error codes in gigsky


now suppose we have an arraylist and we perform multiple add remove 
should we use another data structure to minimise the cost ,or should we use arraylist itself
we can use doubly linked list
addfirst addlast methods etc

in array list random access using indexes

in sql soide
what have u used
have u used relationships
have u used stored procedures
what if u desugn a table and that is read heavy what all things u keep in mind
eg..use indexes,how those indexes mainatain a separate table and they sort it so that we can fetch it and fetch the record from table
for eg we need to search email id,
we create index of email id and sort it...so search is faster

we need to read table based on email ids

now multithreading
suppose a thread t3 starts first,then thread t1 starts and first and then t3 starrts and finishes
use join

now suppose if a thread enters a deadlock state ,we want that thread to execute for a particular amt of time
use executor service.scheduledthread methiod

code question

List of random numbers
pairs of elements present there



1,1,2,2,3

not necessary that list is sorted

1133561122376
1-2
3-1
5-0
6-1
2-1
7-0

count pairs of elements present


1,1,1






PSEUDO CODE

APPROACH 1
HashMap<Integer,Integer> mp=new HashMap<>();
count the frequency of each of the elements in array


Iterate through each of the keys in Hashmap mp
   for each of the keys,divide the value of the key by 2 and store it in variable x
    	that is x=Math.floor(Mp.get(key)/2);

	System.out.println(“Key”:mp.getKey())
	System.out.println(“Pair count”:x)


Complexity:o(n)
space complexity:o(n)


APPROACH 2


Arrays.sort(array);
For(int i=0;i<n;i++)
{
While(are[i]==arr[i+1] && i<n)
{
count++
i++;
}

print arr[i] and count/2;

Count =1//for next set of duplicate elements;
}

Complexity(O(nlogn+n)












